/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Swing;

import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Your Name Rohit.T.P
 */
public class sin extends javax.swing.JFrame
{    
    JFrame logframe;
    
    private File file=new File("NCY");
    private boolean Done=false;
    
    private final String name="UserName";
    private final String email="Email ID";
    private final String password="password";
    
    private Color holder;
    private final Color text=Color.BLACK;
    
    private int pX=0,pY=0;
    
    private final String Look="javax.swing.plaf.nimbus.NimbusLookAndFeel";
    private Image im=new ImageIcon("D:\\Java\\Package\\Swing\\Images\\Material1.jpg").getImage();
    
    public final void setLook(String look)
    {
        try 
        {
            SwingUtilities.invokeAndWait(() ->
            {
                try
                {
                    UIManager.setLookAndFeel(look);
                } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e)
                {
                    try
                    {
                        UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
                    } catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException e2) {}
                }
            });
        } catch (InterruptedException ex)
        {} catch (InvocationTargetException ex)
        {
            Logger.getLogger(Login_SignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Creates new form sin
     */
    public sin()
    {
        setLook(Look);
        initComponents();
        Login.setVisible(false);
        setLocationRelativeTo(null);
        setVisible(true);
        postInit();
    }
    
    public void setLogin(JFrame frame)
    {
        this.logframe=frame;
        this.Login.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        Mainpan = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();
        Profile = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        Password1 = new javax.swing.JPasswordField();
        Password2 = new javax.swing.JPasswordField();
        Ok = new javax.swing.JButton();
        Login = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setName("frame"); // NOI18N
        setUndecorated(true);

        Mainpan.setBackground(new java.awt.Color(94, 149, 195));

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Swing/Images/Material1.jpg"))); // NOI18N
        Logo.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        Logo.setMaximumSize(new java.awt.Dimension(1080, 477));
        Logo.setMinimumSize(new java.awt.Dimension(1080, 477));
        Logo.setPreferredSize(new java.awt.Dimension(1080, 477));
        Logo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseDragged(java.awt.event.MouseEvent evt)
            {
                LogoMouseDragged(evt);
            }
        });
        Logo.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                LogoMousePressed(evt);
            }
        });

        Profile.setBackground(new java.awt.Color(204, 204, 255));
        Profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Swing/Images/Avatar.png"))); // NOI18N
        Profile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Profile.setOpaque(true);
        Profile.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                ProfileMouseClicked(evt);
            }
        });

        Name.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Name.setForeground(new java.awt.Color(204, 204, 204));
        Name.setToolTipText("");
        Name.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Name.setUI(new RoundedFieldUI());
        Name.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                NameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                NameFocusLost(evt);
            }
        });
        Name.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                NameActionPerformed(evt);
            }
        });
        Name.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                NameKeyPressed(evt);
            }
        });

        Email.setFont(Name.getFont());
        Email.setUI(new RoundedFieldUI());
        Email.setForeground(new java.awt.Color(204, 204, 204));
        Email.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                EmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                EmailFocusLost(evt);
            }
        });
        Email.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                EmailActionPerformed(evt);
            }
        });
        Email.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                EmailKeyPressed(evt);
            }
        });

        Password1.setFont(Name.getFont());
        Password1.setUI(new RoundedPasswordUI());
        Password1.setForeground(new java.awt.Color(204, 204, 204));
        Password1.setEchoChar('\u2b24');
        Password1.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                Password1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                Password1FocusLost(evt);
            }
        });
        Password1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Password1ActionPerformed(evt);
            }
        });
        Password1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                Password1KeyPressed(evt);
            }
        });

        Password2.setFont(Name.getFont());
        Password2.setUI(new RoundedPasswordUI());
        Password2.setForeground(new java.awt.Color(204, 204, 204));
        Password2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Password2.setEchoChar(Password1.getEchoChar());
        Password2.setFocusAccelerator(Password1.getFocusAccelerator());
        Password2.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                Password2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                Password2FocusLost(evt);
            }
        });
        Password2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Password2ActionPerformed(evt);
            }
        });
        Password2.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                Password2KeyPressed(evt);
            }
        });

        Ok.setBackground(null);
        Ok.setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        Ok.setForeground(new java.awt.Color(51, 51, 255));
        Ok.setText("SignUp");
        Ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Ok.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                OkActionPerformed(evt);
            }
        });

        Login.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Login.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Login.setText("Login");
        Login.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Login.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                LoginMousePressed(evt);
            }
        });

        javax.swing.GroupLayout MainpanLayout = new javax.swing.GroupLayout(Mainpan);
        Mainpan.setLayout(MainpanLayout);
        MainpanLayout.setHorizontalGroup(
            MainpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainpanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MainpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Name)
                    .addComponent(Email)
                    .addComponent(Password1)
                    .addComponent(Password2, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE))
                .addGap(56, 56, 56))
            .addGroup(MainpanLayout.createSequentialGroup()
                .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(MainpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainpanLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainpanLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(Profile, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainpanLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        MainpanLayout.setVerticalGroup(
            MainpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainpanLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(Profile, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Password1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Password2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Login)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MainpanLayout.createSequentialGroup()
                .addComponent(Logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Mainpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Mainpan, javax.swing.GroupLayout.PREFERRED_SIZE, 476, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void postInit()
    {
        holder=Name.getForeground();        
        Name.setText(name);
        Email.setText(email);
        Password1.setText(password);
        Password2.setText(password);
        Ok.requestFocus();
        Image im1=new ImageIcon("D:\\Java\\Package\\Swing\\Images\\Avatar.png").getImage();
        icon icon = new icon(im,im1,Logo,Profile);
    }
    private void OkActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_OkActionPerformed
    {//GEN-HEADEREND:event_OkActionPerformed
        if(Name.getText().equals(name))
        {
            JOptionPane.showMessageDialog(Name, "Pleas Enter a User Name", "Required Field Empty", JOptionPane.ERROR_MESSAGE);
        }
        else if(Email.getText().equals(email))
        {
            JOptionPane.showMessageDialog(Name, "Pleas Enter a Email ID", "Required Field Empty", JOptionPane.ERROR_MESSAGE);
        }
        else if(!(Password2.getText().equals(Password1.getText())))
        {
            JOptionPane.showMessageDialog(Name, "Passwords Dont Match", "Required Field Empty", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            String[] tofile=
            {
                Name.getText(),Email.getText(),Password1.getText()
            };
            Done=true;
            dispose();
        }
    }//GEN-LAST:event_OkActionPerformed

    private void LoginMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LoginMousePressed
    {//GEN-HEADEREND:event_LoginMousePressed
        this.dispose();
        if(logframe!=null)logframe.setVisible(true);
    }//GEN-LAST:event_LoginMousePressed

    private void NameFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_NameFocusGained
    {//GEN-HEADEREND:event_NameFocusGained
        Name.setForeground(text);
        if(Name.getText().equals(name))
        {
            Name.setText("");
            Ok.setBackground(Color.red);
            return;
        }
        if(Email.getText().equals(email))
        {
            Ok.setBackground(Color.red);
            return;
        }
        if(Password1.getText().equals(""))
        {
            Ok.setBackground(Color.red);
            return;
        }
        if(!Password2.getText().equals(Password1.getText()))
        {
            Ok.setBackground(Color.red);
            return;
        }
        Ok.setBackground(Color.GREEN);
    }//GEN-LAST:event_NameFocusGained

    private void EmailFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_EmailFocusGained
    {//GEN-HEADEREND:event_EmailFocusGained
        Email.setForeground(text);
        if(Email.getText().equals(email))
        {
            Email.setText("");
            Ok.setBackground(Color.red);
        }
        else
        {
            if(Name.getText().equals(name))
            {
                Ok.setBackground(Color.red);
                return;
            }
            if(Password1.getText().equals(""))
            {
                Ok.setBackground(Color.red);
                return;
            }
            if(!Password2.getText().equals(Password1.getText()))
            {
                Ok.setBackground(Color.red);
                return;
            }
            Ok.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_EmailFocusGained

    private void Password1FocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_Password1FocusGained
    {//GEN-HEADEREND:event_Password1FocusGained
        Password1.setForeground(text);
        if(Password1.getText().equals(password))
        {
            Password1.setText("");
            Ok.setBackground(Color.red);
        }
        else
        {
            if(Name.getText().equals(""))
            {
                Ok.setBackground(Color.red);
                return;
            }
            if(Email.getText().equals(""))
            {
                Ok.setBackground(Color.red);
                return;
            }
            if(!Password2.getText().equals(Password1.getText()))
            {
                Ok.setBackground(Color.red);
                return;
            }
            Ok.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_Password1FocusGained

    private void Password2FocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_Password2FocusGained
    {//GEN-HEADEREND:event_Password2FocusGained
        Password2.setForeground(text);
        if(Password2.getText().equals(password))
        {
           Password2.setText("");
           Ok.setBackground(Color.red);
        }
        else
        {
            if(Name.getText().equals(""))
            {
                Ok.setBackground(Color.red);
                return;
            }
            if(Email.getText().equals(""))
            {
                Ok.setBackground(Color.red);
                return;
            }
            if(Password1.getText().equals(""))
            {
                Ok.setBackground(Color.red);
                return;
            }
            if(!Password2.getText().equals(Password1.getText()))
            {
                Ok.setBackground(Color.red);
                return;
            }
            Ok.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_Password2FocusGained

    private void NameFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_NameFocusLost
    {//GEN-HEADEREND:event_NameFocusLost
        if(Name.getText().equals(""))
        {
            Name.setText(name);
            Name.setForeground(holder);
        }
    }//GEN-LAST:event_NameFocusLost

    private void EmailFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_EmailFocusLost
    {//GEN-HEADEREND:event_EmailFocusLost
        if(Email.getText().equals(""))
        {
            Email.setForeground(holder);
            Email.setText(email);
        }
    }//GEN-LAST:event_EmailFocusLost

    private void Password1FocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_Password1FocusLost
    {//GEN-HEADEREND:event_Password1FocusLost
        if(Password1.getText().equals(""))
        {
            Password1.setForeground(holder);
            Password1.setText(password);
        }
    }//GEN-LAST:event_Password1FocusLost

    private void Password2FocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_Password2FocusLost
    {//GEN-HEADEREND:event_Password2FocusLost
        if(Password2.getText().equals(""))
        {
            Password2.setForeground(holder);
            Password2.setText(password);
        }
    }//GEN-LAST:event_Password2FocusLost

    private void ProfileMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_ProfileMouseClicked
    {//GEN-HEADEREND:event_ProfileMouseClicked
        JFileChooser F1=new JFileChooser();
        F1.setVisible(true);
        F1.setMultiSelectionEnabled(false);
        F1.setAcceptAllFileFilterUsed(false);
        F1.setFileSelectionMode(JFileChooser.FILES_ONLY);
        F1.setDialogTitle("Select Cover Image");
        F1.setFileFilter(new FileFilter() 
        {

        @Override
        public String getDescription() 
        {
            return "Image";
        }
        @Override
        public boolean accept(File f) {
            if (f.isDirectory()) {
                return true;
            } else {
                return f.getName().toLowerCase().endsWith(".jpg")
                        || f.getName().toLowerCase().endsWith(".gif")
                        || f.getName().toLowerCase().endsWith(".png")
                        || f.getName().toLowerCase().endsWith(".bmp")
                        || f.getName().toLowerCase().endsWith(".jpeg")
                        || f.getName().toLowerCase().endsWith(".tiff");
            }
        }}); 
        if(F1.showOpenDialog(new Component() {})==JFileChooser.APPROVE_OPTION)
        {
            try 
            {
                Image img = ImageIO.read(new File(F1.getSelectedFile().getCanonicalPath()));
                icon icon = new icon(im,img,Logo,Profile);

            } catch (IOException ex) 
            {
            }
        }        
    }//GEN-LAST:event_ProfileMouseClicked
    
    private void LogoMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LogoMousePressed
    {//GEN-HEADEREND:event_LogoMousePressed
        pX=evt.getX();
        pY=evt.getY();
    }//GEN-LAST:event_LogoMousePressed

    private void LogoMouseDragged(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LogoMouseDragged
    {//GEN-HEADEREND:event_LogoMouseDragged
        setLocation(getLocation().x+evt.getX()-pX,getLocation().y+evt.getY()-pY);
    }//GEN-LAST:event_LogoMouseDragged

    private void NameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_NameActionPerformed
    {//GEN-HEADEREND:event_NameActionPerformed
        NameFocusGained(null);
    }//GEN-LAST:event_NameActionPerformed

    private void EmailActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_EmailActionPerformed
    {//GEN-HEADEREND:event_EmailActionPerformed
        EmailFocusGained(null);
    }//GEN-LAST:event_EmailActionPerformed

    private void Password1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Password1ActionPerformed
    {//GEN-HEADEREND:event_Password1ActionPerformed
        Password1FocusGained(null);
    }//GEN-LAST:event_Password1ActionPerformed

    private void Password2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Password2ActionPerformed
    {//GEN-HEADEREND:event_Password2ActionPerformed
        Password2FocusGained(null);
    }//GEN-LAST:event_Password2ActionPerformed

    private void NameKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_NameKeyPressed
    {//GEN-HEADEREND:event_NameKeyPressed
        NameFocusGained(null);
    }//GEN-LAST:event_NameKeyPressed

    private void EmailKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_EmailKeyPressed
    {//GEN-HEADEREND:event_EmailKeyPressed
        EmailFocusGained(null);
    }//GEN-LAST:event_EmailKeyPressed

    private void Password1KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_Password1KeyPressed
    {//GEN-HEADEREND:event_Password1KeyPressed
        Password1FocusGained(null);
    }//GEN-LAST:event_Password1KeyPressed

    private void Password2KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_Password2KeyPressed
    {//GEN-HEADEREND:event_Password2KeyPressed
        Password2FocusGained(null);
    }//GEN-LAST:event_Password2KeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Email;
    private javax.swing.JLabel Login;
    protected javax.swing.JLabel Logo;
    private javax.swing.JPanel Mainpan;
    private javax.swing.JTextField Name;
    private javax.swing.JButton Ok;
    private javax.swing.JPasswordField Password1;
    private javax.swing.JPasswordField Password2;
    protected javax.swing.JLabel Profile;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the file
     */
    public File getFile()
    {
        return file;
    }

    /**
     * @return the Done
     */
    public boolean isDone()
    {
        return Done;
    }

    /**
     * @param im the im to set
     */
    public void setIm(Image im)
    {
        this.im = im;
    }
}

class icon 
{
    public icon(Image logo, Image dp,JLabel Logo,JLabel Profile)
    {
        ImageIcon imageIcon = new ImageIcon(logo.getScaledInstance(Logo.getWidth(), Logo.getHeight(), Image.SCALE_SMOOTH));
        Logo.setIcon(imageIcon);
        ImageIcon imageIcon1 = new ImageIcon(dp.getScaledInstance(Profile.getWidth(), Profile.getHeight(), Image.SCALE_SMOOTH));
        Profile.setIcon(imageIcon1);
    }
}